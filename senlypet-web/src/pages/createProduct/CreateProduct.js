import React, { useEffect, useState } from "react";
import "./CreateProduct.scss";
import Sidebar from "../../components/sidebar/Sidebar";
import Navbar from "../../components/navbar/Navbar";
import { SettingsSuggest } from "@mui/icons-material";
import { Link, useNavigate , Navigate} from "react-router-dom";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";

const CreateProduct = () => {
    const navigate = useNavigate();
  const [title, setTitle] = useState("");
  const [product, setProduct] = useState([]);
  const [price, setPrice] = useState("");
  const [unit, setUnit] = useState("");
  const [image, setImage] = useState("");
  const [storage, setStorage] = useState("");
  const [delivery, setDelivery] = useState("");
  const [category, setCategory] = useState([]);
  const [description, setDescription] = useState("");
  const [getcategory, setGetCategory] = useState([]);
  // console.log(title);
  // console.log(image);
  // console.log(price);
  // console.log(delivery);
  // console.log(storage);
  //   console.log(description);
  //   console.log(category);
   useEffect(() => {
     getListCategory();
   }, []);  
    
  const handleAddproduct = async (e) => {
    e.preventDefault();
    // window.alert("Th√™m m·ªõi s·∫£n ph·∫©m th√†nh c√¥ng!!!");
    try {
      await axios.post('http://localhost:3000/api/product', {
        category, title, image, price, storage, delivery, description, unit
      }).then(res => {
        console.log(res.data);
         
        toast.success("ü¶Ñ Th√™m s·∫£n ph·∫©m m·ªõi th√†nh c√¥ng!", {
              position: "top-right",
              autoClose: 900,
              hideProgressBar: false,
              closeOnClick: true,
              pauseOnHover: true,
              draggable: true,
              progress: undefined,
              theme: "colored"
            });
        // navigate("/admin/product");
      })
    } catch (error) {
      console.log("Error: ", error);
    }
   
  }
  

   
    const getListCategory = async() => {
        await axios.get(`http://localhost:3000/api/categories`).then(res => {
            const c = res?.data.categories;
            console.log(c)
            setGetCategory(c);
        }).catch((error) =>{
            console.log('Error: ', error);
        })
    }

//     H·∫°t Royal Canin British Shorthair Kitten Cho M√®o Con Anh L√¥ng Ng·∫Øn
//     145000
//     ROYAL CANIN British Shorthair Kitten ƒë∆∞·ª£c s·∫£n xu·∫•t d√†nh ri√™ng cho chi·∫øc h√†m ƒë·∫∑c bi·ªát c·ªßa m√®o Anh l√¥ng ng·∫Øn, gi√∫p tƒÉng tr∆∞·ªüng c∆° v√† x∆∞∆°ng, h·ªó tr·ª£ s·ª©c kh·ªèe ƒë∆∞·ªùng ti·∫øt ni·ªáu v√† tƒÉng c∆∞·ªùng h·ªá mi·ªÖn d·ªãch. 
// TH√ÄNH PH·∫¶N
// Protein gia c·∫ßm, g·∫°o, protein th·ª±c v·∫≠t*, ch·∫•t b√©o th·ª±c v·∫≠t, b·∫Øp, protein ƒë·ªông v·∫≠t, gluten b·∫Øp, b·ªôt l√∫a m√¨, c·ªß c·∫£i ƒë∆∞·ªùng, x∆° th·ª±c v·∫≠t, d·∫ßu c√°, kho√°ng ch·∫•t, d·∫ßu ƒë·∫≠u n√†nh, men, psyllium (0,5%), fructo-oligo-sacarit, men th·ªßy ph√¢n (ngu·ªìn manno-oligo-sacarit), chi·∫øt xu·∫•t men (ngu·ªìn betaglucan), d·∫ßu borage, chi·∫øt xu·∫•t c√∫c v·∫°n th·ªç (ngu·ªìn lutein), gi√°p x√°c th·ªßy ph√¢n (ngu·ªìn glucosamine), s·ª•n th·ªßy ph√¢n (ngu·ªìn chondroitin).
// Ph·ª• gia dinh d∆∞·ª°ng: Vitamin A, Vitamin D3, Vitamin E, E1 (S·∫Øt), E2 (I ·ªët), E4 (ƒê·ªìng), E5 (Mangan), E6 (K·∫Ωm), E8 (Selen):, L-carnitine - Ph·ª• gia k·ªπ thu·∫≠t: Clinoptilolite - Ch·∫•t ch·ªëng oxi h√≥a. 
// *L.I.P.: Protein c√≥ ƒë·ªô ti√™u h√≥a cao.
// salt.tikicdn.com/cache/750x750/ts/product/20/c9/a7/ec9bb4fed196770bb4d2f39d6ac7d1f1.jpg.webp
    return (
      <div className="createproduct">
        <Sidebar />
        <div className="createproductContainer">
          <Navbar />
          {/* <div className="row ">
            <p className="flex justify-center items-center text-3xl font-semibold pt-2">
              Th√™m s·∫£n ph·∫©m
            </p>
            <div className="flex justify-center items-center">
              <form
                onSubmit={handleAddproduct}
                // method="post"
                // enctype="multipart/form-data"
                className="mt-1"
              >
                <div className="form-group mt-2">
                  <label htmlFor="nameProduct">T√™n s·∫£n ph·∫©m: </label>
                  <input
                    type="text"
                    className="form-control"
                    value={title}
                    id="nameProduct"
                    onChange={(e) => setTitle(e.target.value)}
                  />
                </div>

                <div className="form-group mt-2">
                  <label htmlFor="priceProduct">Gi√°: </label>
                  <input
                    type="text"
                    className="form-control"
                    value={price}
                    id="priceProduct"
                    onChange={(e) => setPrice(e.target.value)}
                  />
                </div>
                <div className="form-group mt-2">
                  <label htmlFor="category">
                    Lo·∫°i s·∫£n ph·∫©m:
                    <select
                      className="border-4"
                      value={category}
                      onChange={(e) => setCategory(e.target.value)}
                    >
                      {getcategory.map((i, k) => (
                        <option key={k} value={i._id}>
                          {i.type}
                        </option>
                      ))}
                    </select>
                  </label>
                </div>
                <div className="form-group mt-2">
                  <label htmlFor="storageP">S·ªë L∆∞·ª£ng H√†ng Nh·∫≠p Kho: </label>
                  <input
                    type="text"
                    className="form-control"
                    value={storage}
                    id="storageP"
                    onChange={(e) => setStorage(e.target.value)}
                  />
                </div>
                <div className="form-group mt-2">
                  <label htmlFor="deliveP">
                    S·ªë L∆∞·ª£ng H√†ng T·ªìn Kho: (n·∫øu c√≥ thay ƒë·ªïi s·ªë l∆∞·ª£ng nh·∫≠p kho
                    th√¨ b·∫°n h√£y t√≠nh l·∫°i s·ªë l∆∞·ª£ng t·ªìn )
                  </label>
                  <input
                    type="text"
                    className="form-control"
                    value={delivery}
                    id="deliveP"
                    onChange={(e) => setDelivery(e.target.value)}
                  />
                </div>
                <div className="form-group mt-2">
                  <label htmlFor="unitProduct">ƒê∆°n v·ªã t√≠nh: </label>
                  <input
                    type="text"
                    className="form-control"
                    value={unit}
                    id="unitProduct"
                    onChange={(e) => setUnit(e.target.value)}
                  />
                  </div>
                <div className="form-group mt-2">
                  <label htmlFor="imgP">Link ·∫£nh</label>
                  <input
                    type="text"
                    className="form-control"
                    value={image}
                    id="imgP"
                    onChange={(e) => setImage(e.target.value)}
                  />
                </div>
                <div className="form-group mt-2">
                  <label htmlFor="description">M√¥ T·∫£: </label>
                  <textarea
                    className="form-control"
                    id="description"
                    rows="10"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                  ></textarea>
                </div>
                <div className="col text-center">
                  <button className="btn btn-success ">
                    Th√™m
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div> */}
        <div className="bottom">
            <div className="left  text-slate-500 text-4xl ">
              <h1> Th√™m d·ªãch v·ª•</h1>
            </div>
            <div className="right">
              <form>
                <div className="formInput">
                  <label>T√™n d·ªãch v·ª• </label>
                  <input
                    type="text"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                    //   placeholder="htxuan"
                    //   value={username}
                  />
                </div>
                <div className="formInput">
                  <label>Gi√° </label>
                  <input
                    type="text"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                   value={price}
                    
                    onChange={(e) => setPrice(e.target.value)}
                    //   placeholder="htxuan"
                    //   value={username}
                  />
                </div>
                <div className="formInput">
                  <label>H√¨nh ·∫£nh</label>
                  <input
                    type="text"
                    value={image}
                    id="imgP"
                    onChange={(e) => setImage(e.target.value)}
                    //   placeholder="htxuan"
                    //   value={username}
                    // onChange={(e) => setImage(e.target.value)}
                  />
                </div>

                <div className="formInput">
                  <label htmlFor="category">
                    Lo·∫°i s·∫£n ph·∫©m:
                    <select
                      className="border-4"
                      value={category}
                      onChange={(e) => setCategory(e.target.value)}
                    >
                      {getcategory.map((i, k) => (
                        <option key={k} value={i._id}>
                          {i.type}
                        </option>
                      ))}
                    </select>
                  </label>
                  {/* <label>
                    D·∫°ng d·ªãch v·ª•
                    <select
                      className="h-[30px] w-[200px] border-1 border-gray-400"
                      value={category}
                      onChange={(e) => setCategory(e.target.value)}
                    >
                      {ss &&
                        ss.map((s, k) => (
                          <option value={s._id}>{s.type}</option>
                        ))}
                    </select>
                  </label> */}
                </div>
                <div className="formInput">
                  <label>S·ªë l∆∞·ª£ng h√†ng nh·∫≠p kho </label>
                  <input
                    type="text"
                    value={storage}
                    // id="storageP"
                    onChange={(e) => setStorage(e.target.value)}
                    //   placeholder="htxuan"
                    //   value={username}
                    // onChange={(e) => setTimes(e.target.value)}
                  />
                </div>
                <div className="formInput">
                  <label>S·ªë l∆∞·ª£ng h√†ng t·ªìn kho </label>
                  <input
                    type="text"
                    value={delivery}
                    // id="deliveP"
                    onChange={(e) => setDelivery(e.target.value)}
                     //   placeholder="htxuan"
                    //   value={username}
                    // onChange={(e) => setTimes(e.target.value)}
                  />
                </div>
                <div className="formInput">
                  <label>ƒê∆°n v·ªã t√≠nh</label>
                  <input
                    type="text"
                    value={unit}
                    id="unitProduct"
                    onChange={(e) => setUnit(e.target.value)}
                      //   placeholder="htxuan"
                    //   value={username}
                    // onChange={(e) => setTimes(e.target.value)}
                  />
                </div>
                <div className="formInput">
                  <label>M√¥ t·∫£</label>
                 <textarea
                    className="form-control"
                    id="description"
                    rows="10"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                  ></textarea>
                </div>
                {/* <p> {category }</p> */}
              </form>
            </div>
            <div className="end">
              <button
                className="bg-blue-800 w-[200px]"
                onClick={handleAddproduct}
              >
                <p className="text-white font-semibold text-xl mb-1 py-2">
                  Th√™m m·ªõi
                </p>
              </button>
            </div>
          </div>
        </div>
        <ToastContainer />
      </div>
    );
};

export default CreateProduct;
